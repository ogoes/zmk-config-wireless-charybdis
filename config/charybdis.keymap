#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>


#define BASE 0
#define NAV 1
#define NUM 2
#define FUN 3

// mouse
#define AUTOMOUSE 4
#define MOUSE 5
#define SCROLL 6

#define HOMEROWL(c1, c2, c3, c4, c5) &mt LSHFT c1 &mt LCTRL c2 &mt LALT c3 &mt LGUI c4 &kp c5
#define HOMEROWR(c1, c2, c3, c4, c5) &kp c1 &mt RGUI c2 &mt RALT c3 &mt RCTRL c4 &mt RSHFT c5

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {

    combos {
      #include "combos.dtsi"
    };

/*           35 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰─────╮30 31 32│ │33 34╭────────╯
      ╰────────╯ ╰─────╯         */
    keymap {
        compatible = "zmk,keymap";

        _BASE {
            bindings = <
            &kp Q             &kp W             &kp E          &kp R               &kp T          &kp Y  &kp U               &kp I          &kp O            &kp P               
            &mt LSHFT A       &kp S             &kp D          &kp F               &kp G          &kp H  &kp J               &kp K          &kp L            &kp SEMICOLON
            &kp Z             &kp X             &kp C          &kp V               &kp B          &kp N  &kp M               &kp COMMA      &kp DOT          &kp FSLH           
                                             &kp LGUI        &kp TAB       &lt NAV SPACE          &lt NUM BACKSPACE   &kp RET
            >;
        };

        _NAV {
            bindings = <
              &trans    &kp UP    &trans     &trans  &trans    &kp N7           &kp N8                &kp N9          &kp N0  &kp HOME
              &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans    &kp N4           &u_mt RIGHT_SHIFT N5  &u_mt RCTRL N6  &trans  &trans
              &trans    &trans    &trans     &trans  &trans    &kp N1           &kp N2                &kp N3          &trans  &trans
                            &trans     &trans  &trans    &lt FUN DELETE  &kp LSHFT
            >;
        };

        _SYMNUM {
            bindings = <
&kp EXCL      &kp AT       &kp HASH    &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS                 &kp KP_MULTIPLY   &kp LPAR              &kp RPAR              
&trans        &bt BT_PRV   &bt BT_NXT  &trans    &trans       &kp UNDER  &u_mt RIGHT_SHIFT EQUAL  &u_mt RCTRL LBKT  &u_mt RIGHT_ALT RBKT  &u_mt RIGHT_GUI BSLH  
&out OUT_TOG  &bootloader  &trans      &trans    &trans       &kp MINUS  &kp PLUS                 &kp LBRC          &kp RBRC              &kp PIPE             
                                       &trans      &trans    &mo FUN        &trans     &trans
            >;
        };

        _FUN {
            bindings = <
&trans   &kp F1  &kp F2   &kp F3   &kp F4     &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  
&kp DEL  &kp F5  &kp F6   &kp F7   &kp F8     &out OUT_BLE  &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE    
&trans   &kp F9  &kp F10  &kp F11  &kp F12    &trans        &trans            &trans             &trans           &trans       
                         &trans   &trans   &trans     &trans        &trans
            >;
        };

        _AUTO_MOUSE {
            bindings = <
&trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  
                &mo MOUSE  &trans  &trans       &trans  &trans
            >;
        };

        _MOUSE {
            bindings = <
&trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans     &mo SCROLL  &trans       &trans  &mkp LCLK &mkp RCLK  &mkp MCLK  &trans  
&trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  
                   &trans  &trans  &trans       &trans  &trans
            >;
        };

        _SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

    };
};


